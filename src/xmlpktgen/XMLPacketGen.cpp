/*
    ------------------------------------------------------------------------------------
    LICENSE:
    ------------------------------------------------------------------------------------
    This file is part of EVEmu: EVE Online Server Emulator
    Copyright 2006 - 2008 The EVEmu Team
    For the latest information visit http://evemu.mmoforge.org
    ------------------------------------------------------------------------------------
    This program is free software; you can redistribute it and/or modify it under
    the terms of the GNU Lesser General Public License as published by the Free Software
    Foundation; either version 2 of the License, or (at your option) any later
    version.

    This program is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License along with
    this program; if not, write to the Free Software Foundation, Inc., 59 Temple
    Place - Suite 330, Boston, MA 02111-1307, USA, or go to
    http://www.gnu.org/copyleft/lesser.txt.
    ------------------------------------------------------------------------------------
    Author:     Zhur
*/

#include "common.h"
#include "XMLPacketGen.h"
#include "../common/logsys.h"
#include <string>
#include <map>
#include <errno.h>
#include <string.h>
#include <stdio.h>

const char* const XMLPacketGen::s_mGenFileComment =
"/*  EVEmu: EVE Online Server Emulator\n"
"  \n"
"  **************************************************************\n"
"  This file is automatically generated, DO NOT EDIT IT DIRECTLY.\n"
"  **************************************************************\n"
"  \n"
"  (If you need to customize an object, you must copy that object\n"
"  into another source file, and give up the ability to generate it)\n"
"  \n"
"  \n"
"  This program is free software; you can redistribute it and/or modify\n"
"  it under the terms of the GNU General Public License as published by\n"
"  the Free Software Foundation; version 2 of the License.\n"
"  \n"
"  This program is distributed in the hope that it will be useful,\n"
"  but WITHOUT ANY WARRANTY except by those people which sell it, which\n"
"  are required to give you total support for your newly bought product;\n"
"  without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n"
"  A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n"
"  \n"
"  You should have received a copy of the GNU General Public License\n"
"  along with this program; if not, write to the Free Software\n"
"  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n"
"*/\n"
;

XMLPacketGen::HeaderGenerator XMLPacketGen::s_mHeaderGenerator;
XMLPacketGen::SourceGenerator XMLPacketGen::s_mSourceGenerator;

std::string XMLPacketGen::FNameToDef( const char* buf )
{
    char *obuf = new char[strlen(buf)+10];
    char *ptr = obuf;
    const char *bptr = buf;
    *ptr = '_'; ++ptr;
    *ptr = '_'; ++ptr;
    while(*bptr != '\0') {
        if(*bptr == '/' || *bptr == ':' || *bptr == '\\' || *bptr == '.' || *bptr == '-')
            *ptr = '_';
        else
            *ptr = *bptr;
        ++ptr;
        ++bptr;
    }
    *ptr = '_'; ++ptr;
    *ptr = '_'; ++ptr;
    *ptr = '\0';
    std::string b(obuf);
    delete[] obuf;
    return(b);
}

XMLPacketGen::XMLPacketGen() {}
XMLPacketGen::~XMLPacketGen() {}

bool XMLPacketGen::LoadFile( const char* xml_file )
{
	if( !mDoc.LoadFile( xml_file ) )
	{
        _log(COMMON__ERROR, "Failed to parse XML file '%s' line %d: %s", xml_file, mDoc.ErrorRow(), mDoc.ErrorDesc());
        return false;
    }

	return true;
}

bool XMLPacketGen::GenPackets( const char* header, const char* source )
{
    TiXmlElement *root = mDoc.RootElement();
    if( root == NULL )
	{
		_log(COMMON__ERROR, "Unable to find root 'Elements' in %s", mDoc.Value() );
        return false;
    }

    FILE *h = fopen( header, "w" );
    if( h == NULL )
	{
        _log(COMMON__ERROR, "Unable to open output file %s: %s", header, strerror(errno));
        return false;
    }

    FILE *src = fopen( source, "w" );
    if( src == NULL )
	{
        _log(COMMON__ERROR, "Unable to open output file %s: %s", source, strerror(errno));
        fclose(h);
        return false;
    }

    /*
     * Generate .h file:
     *
     */
    std::string def = FNameToDef( header );

    //header:
    fprintf(h,
        "%s\n"
        "#ifndef %s\n"
        "#define %s\n"
        "\n"
        "#include <string>\n"
        "#include <vector>\n"
        "#include <map>\n"
        "#include \"common.h\"\n"
        "#include \"logsys.h\"\n"
        "#include \"PyVisitor.h\"\n"
        "#include \"PyRep.h\"\n"
        "\n"
        "\n",
        s_mGenFileComment, def.c_str(), def.c_str()
    );
    //body:
    s_mHeaderGenerator.Generate( h, root );
    //footer:
    fprintf(h,
        "\n"
		"\n"
        "#endif\n"
		"\n"
		"\n"
    );

    /*
     * Generate .cpp file:
     *
     */
    //header:
    fprintf(src,
        "%s\n"
        "\n"
        "#include <string>\n"
        "#include \"%s\"\n"
        "\n"
        "\n"
        "\n",
        s_mGenFileComment, header
    );
    //body:
    s_mSourceGenerator.Generate( src, root );
    //footer:
    fprintf(src,
        "\n"
		"\n"
    );

    return true;
}








