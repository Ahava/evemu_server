/*
 * Configuration header, generated by 'cmake' during compilation.
 *
 * DO NOT EVER EDIT BY HAND! If you need to change anything here, edit
 * config.h.in or your CMake cache.
 */

/*************************************************************************/
/* Platform defines                                                      */
/*************************************************************************/
// X64
// Define this if you are building for a 64-bit platform.
#cmakedefine X64 1

// WIN32
// Define this if you are on Windows.
// CMake passes this as a command-line define.

/*************************************************************************/
/* Compiler defines                                                      */
/*************************************************************************/
// MSVC
// Define this if you are using Microsoft C++ Compiler.
#cmakedefine MSVC 1

/*************************************************************************/
/* Header defines                                                        */
/*************************************************************************/
// HAVE_CRTDBG_H
// Define if crtdbg.h is available.
#cmakedefine HAVE_CRTDBG_H 1

// HAVE_INTTYPES_H
// Define if inttypes.h is available.
#cmakedefine HAVE_INTTYPES_H 1

// HAVE_VLD_H
// Define if vld.h is available.
#cmakedefine HAVE_VLD_H 1

/*************************************************************************/
/* Feature defines                                                       */
/*************************************************************************/
// HAVE__FINITE
// Define if _finite is available.
#cmakedefine HAVE__FINITE 1

// HAVE__ISNAN
// Define if _isnan is available.
#cmakedefine HAVE__ISNAN 1

// HAVE___FINITE
// Define if __finite is available.
#cmakedefine HAVE___FINITE 1

// HAVE___ISNAN
// Define if __isnan is available.
#cmakedefine HAVE___ISNAN 1

// HAVE_STD_FINITE
// Define if std::finite is available.
#cmakedefine HAVE_STD_FINITE 1

// HAVE_STD_ISFINITE
// Define if std::isfinite is available.
#cmakedefine HAVE_STD_ISFINITE 1

// HAVE_STD_ISNAN
// Define if std::isnan is available.
#cmakedefine HAVE_STD_ISNAN 1

// HAVE_VA_COPY
// Define if va_copy is available.
#cmakedefine HAVE_VA_COPY 1

// HAVE_SNPRINTF
// Define if snprintf is available.
#cmakedefine HAVE_SNPRINTF 1

// HAVE_VSNPRINTF
// Define if vsnprintf is available.
#cmakedefine HAVE_VSNPRINTF 1

// HAVE_ASPRINTF
// Define if asprintf is available.
#cmakedefine HAVE_ASPRINTF 1

// HAVE_VASPRINTF
// Define if vasprintf is available.
#cmakedefine HAVE_VASPRINTF 1

// HAVE_STRTOLL
// Define if strtoll is available.
#cmakedefine HAVE_STRTOLL 1

// HAVE_STRTOULL
// Define if strtoull is available.
#cmakedefine HAVE_STRTOULL 1

// HAVE_STRDUP
// Define if strdup is available.
#cmakedefine HAVE_STRDUP 1

// HAVE_STRCASECMP
// Define if strcasecmp is available.
#cmakedefine HAVE_STRCASECMP 1

// HAVE_STRNCASECMP
// Define if strncasecmp is available.
#cmakedefine HAVE_STRNCASECMP 1

// HAVE_LOCALTIME_R
// Define if localtime_r is available.
#cmakedefine HAVE_LOCALTIME_R 1

// HAVE_LOCALTIME_S
// Define if localtime_s is available.
#cmakedefine HAVE_LOCALTIME_S 1

// HAVE_MSG_NOSIGNAL
// Define if MSG_NOSIGNAL is available.
#cmakedefine HAVE_MSG_NOSIGNAL 1

// HAVE_SO_NOSIGPIPE
// Define if SO_NOSIGPIPE is available.
#cmakedefine HAVE_SO_NOSIGPIPE 1

/*************************************************************************/
/* Configuration                                                         */
/*************************************************************************/
// BOOST_DATE_TIME_NO_LIB
// Disable linking of boost date_time library.
#cmakedefine BOOST_DATE_TIME_NO_LIB 1

// BOOST_REGEX_NO_LIB
// Disable linking of boost regex library
#cmakedefine BOOST_REGEX_NO_LIB 1

// NDEBUG
// Define this if you want a non-debug (release) build
// CMake passes this as a command-line define.

// EVEMU_ROOT
// The root directory of EVEmu workspace.
#define EVEMU_ROOT "@EVEMU_ROOT@"

// EVEMU_VERSION
// The version of source.
#define EVEMU_VERSION "@PROJECT_VERSION@"

// EVEMU_REPOSITORY
// The URL of the source repository.
#define EVEMU_REPOSITORY "@PROJECT_REPOSITORY@"

// TIXML_USE_STL
// Define this if tinyxml should use native STL.
#cmakedefine TIXML_USE_STL 1
